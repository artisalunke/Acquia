.. include:: /common/global.rst

Understanding files
===================

In |acquia-product:ac|, uploaded files are separate from the Drupal
database and your code repository. |acquia-product:ac| deployment code
creates a symbolic link to your application's ``/files`` directory. If
you use Drupal's multisite feature, |acquia-product:ac| creates a
separate ``/files`` directory for each ``settings.php`` file in the
``/sites`` directory.

On |acquia-product:ac|, you manage your Drupal codebase (including
Drupal core, contributed modules, and custom code) using the Git version
control system. Git can manage text files full of code, but is not
suitable for large collections of user-uploaded objects.
|acquia-product:ac| stores your application's ``/files`` directories
outside of your repository and manages them for you. This simplifies
your workflow and makes your repository smaller and more manageable. To
access your application's ``/files`` directories, use the ``sftp``,
``scp``, ``rsync``, or ``ssh`` commands. For more information, see
`About disk storage in
|acquia-product:ac| </acquia-cloud/manage/servers/storage/cli>`__.

An |acquia-product:ace| application runs on several redundant web nodes
(servers) simultaneously. If the application used local file storage on
the web notes, files uploaded to one web node would not be available on
another. |acquia-product:ace| uses shared file systems to ensure that
data your code writes to a ``/files`` directory is accessible on all web
nodes running your application's code.

When you import or create your Drupal codebase, |acquia-product:ac|
creates symbolic links to your public file directory. Every Drupal
multisite website in your account has its own ``/files`` directory.

-  ```[docroot]`` <%5Bacquia-product:kb%5Darticle/docroot-definition>`__\ ``/files``
   links to ``/mnt/files/[site].[env]/files``
-  ``[docroot]/sites/default/files`` links to
   ``/mnt/files/[site].[env]/sites/default/files``
-  ``[docroot]/sites/example.com/files`` links to
   ``/mnt/files/[site].[env]/sites/example.com/files``

To ensure its privacy, the ``/files-private`` directory is not
symbolically linked to your application's
```[docroot]`` <%5Bacquia-product:kb%5Darticle/docroot-definition>`__.
For private file handling, you can either use the absolute path to
``[docroot]`` or a relative path under ``../acquia-files``. For more
information, see `Setting the private file directory on
|acquia-product:ac| <%5Bacquia-product:kb%5Darticle/setting-private-file-directory-acquia-cloud>`__.

.. _large:

Handling large files
--------------------

Using very large files can cause problems on your application. For
example, large images can increase page load times, causing a perceived
performance issue for your visitors. Additional problems can include
having files that are too large for your application's Varnish cache,
and that uploading large files through Drupal can fail due to timeouts
at various levels of the stack.

If, however, you need to use very large files, consider these resources
and factors:

-  If you find that uploads of large files to |acquia-product:ace| are
   timing out or otherwise failing, see `Correcting broken uploads on
   |acquia-product:ace| <%5Bacquia-product:kb%5Darticle/correcting-broken-uploads-acquia-cloud-enterprise>`__.
-  If you need to upload files greater than 280MB in size, `contact
   Acquia Support </support#contact>`__ to discuss having your
   application configured to allow larger uploads. This option is
   available only if you are entitled to file Acquia Support tickets.
-  Read `Handling large
   files <%5Bacquia-product:kb%5Darticle/scoping-impact-image-processing>`__
   for best practices about image processing, file organization, and
   storage.

.. _download:

Downloading large files
~~~~~~~~~~~~~~~~~~~~~~~

Drupal application on |acquia-product:ac| support downloads of files of
any size. However, large downloads require a correct ``Content-Length``
header in the HTTP response in order to succeed. For any static file,
the Apache web server in the |acquia-product:ac| stack will provide the
correct header. If the download is large (1 GB or greater) and is
dynamically generated (for example, generated by a PHP script), the
download is likely to fail unless a ``Content-Length`` header is
explicitly provided.

.. _large:

Large numbers of files
----------------------

If you maintain a very large number of files in your application, it can
have a substantial negative effect on performance and stability,
especially if they are all contained in the same directory. We have
found that over 2,500 files in any single directory in the files
structure can seriously impact your server's performance and potentially
its stability. If your application requires a large number of files,
maintain them in multiple directories. For more information about files
and performance, see `Improving application
performance </acquia-cloud/performance#files>`__, `Proactively
organizing files in
subfolders <%5Bacquia-product:kb%5Darticle/proactively-organizing-files-subfolders>`__,
and `Optimizing file paths: Organizing files in
subfolders <%5Bacquia-product:kb%5Darticle/optimizing-file-paths-organizing-files-subfolders>`__,
which includes scripts for migrating files into subdirectories in your
file system.

.. _terabyte:

Storing more than a terabyte of files
-------------------------------------

|acquia-product:ac| uses Amazon Elastic Block Stores (EBS) for an
application's files directory.

An EBS volume can be no larger than 1 terabyte. If you require more than
1 terabyte of file storage, you should use `Amazon's S3 storage
service <http://aws.amazon.com/s3/>`__. Amazon S3 is highly reliable and
can scale to any size storage. For Drupal 7 applications, you can use
the `AmazonS3 <https://www.drupal.org/project/amazons3>`__ module, which
uses the Drupal file wrapper to send files directly to and from S3.

For more information, see `Using external storage for
files <%5Bacquia-product:kb%5Darticle/using-external-storage-files>`__.

.. _execute:

File execution restrictions
---------------------------

Files in your application's file storage are not executable by
|acquia-product:ac| PHP processes.

.. _related:

Related Topics
--------------

-  `Importing your files </acquia-cloud/create/import/manual-files>`__
-  `Working with files </acquia-cloud/manage/files>`__
-  `About Drupal multisite installations </acquia-cloud/multisite>`__
-  `|acquia-product:ace| backups, availability, and disaster
   recovery </acquia-cloud/arch/availability#ha>`__

   -  `High availability
      architecture </acquia-cloud/arch/availability#ha>`__ section
   -  `Automated snapshots for disaster
      recovery </acquia-cloud/arch/availability#automatic>`__ section

-  `Monitoring and support </acquia-cloud/arch/monitor>`__
